{"version":3,"sources":["authentication.service.ts"],"names":["core_1","require","environment_1","angular_jwt_1","AuthenticationService","http","this","host","environment","apiUrl","jwtHelper","JwtHelperService","prototype","login","user","post","observe","register","logout","token","loggedInUsername","localStorage","removeItem","saveToken","setItem","addUserToLocalCache","JSON","stringify","getUserFromLocalCache","parse","getItem","loadToken","getToken","isUserLoggedIn","decodeToken","sub","isTokenExpired","__decorate","Injectable","providedIn","exports"],"mappings":"6YAAA,IAAAA,OAAAC,QAAA,iBACAC,cAAAD,QAAA,kCAIAE,cAAAF,QAAA,sBAKAG,sBAAA,WAOE,SAAAA,EAAoBC,GAAAC,KAAAD,KAAAA,EALbC,KAAAC,KAAKL,cAAAM,YAAYC,OAGhBH,KAAAI,UAAY,IAAIP,cAAAQ,iBA4F1B,OAvFSP,EAAAQ,UAAAC,MAAP,SAAaC,GACX,OAAOR,KAAKD,KAAKU,KACbT,KAAKC,KAAI,cAAeO,EAAM,CAAEE,QAAS,cAIxCZ,EAAAQ,UAAAK,SAAP,SAAgBH,GACd,OAAOR,KAAKD,KAAKU,KAAgCT,KAAKC,KAAI,iBAAkBO,IAGpEV,EAAAQ,UAAAM,OAAP,WACGZ,KAAKa,MAAM,KACXb,KAAKc,iBACLC,aAAaC,WAAW,QACxBD,aAAaC,WAAW,SACxBD,aAAaC,WAAW,UAIlBlB,EAAAQ,UAAAW,UAAP,SAAiBJ,GAChBb,KAAKa,MAAMA,EACXE,aAAaC,WAAW,QACxBD,aAAaG,QAAQ,QAAQL,IAGvBf,EAAAQ,UAAAa,oBAAP,SAA2BX,GAE1BO,aAAaG,QAAQ,OAAOE,KAAKC,UAAUb,KAMrCV,EAAAQ,UAAAgB,sBAAP,WACC,OAAOF,KAAKG,MAAMR,aAAaS,QAAQ,SAAU,UAG5C1B,EAAAQ,UAAAmB,UAAP,WACEzB,KAAKa,MAAQE,aAAaS,QAAQ,UAM7B1B,EAAAQ,UAAAoB,SAAP,WACE,OAAO1B,KAAKa,OAIPf,EAAAQ,UAAAqB,eAAP,WAEO,GADA3B,KAAKyB,YACW,MAAbzB,KAAKa,OAA8B,KAAdb,KAAKa,OACrB,GAAgD,MAA7Cb,KAAKI,UAAUwB,YAAY5B,KAAKa,OAAOgB,MAElC7B,KAAKI,UAAU0B,eAAe9B,KAAKa,OAErC,OADAb,KAAKc,iBAAiBd,KAAKI,UAAUwB,YAAY5B,KAAKa,OAAOgB,KACtD,OAepB7B,KAAKY,SAMN,OAAO,GAvFPd,EAAqBiC,WAAA,CAHjCrC,OAAAsC,WAAW,CACVC,WAAY,UAEDnC,GAAb,GAAaoC,QAAApC,sBAAAA","file":"authentication.service.min.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HttpClient, HttpErrorResponse, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Observable, observable } from 'rxjs';\nimport { User } from '../model/user';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  public host=environment.apiUrl;\n private token: any;\n  private loggedInUsername !: string;\n  private jwtHelper = new JwtHelperService();\n\n  constructor(private http:HttpClient) { }\n\n \n  public login(user: User): Observable<HttpResponse<any> |HttpErrorResponse>{\n    return this.http.post<HttpResponse<any>|HttpErrorResponse>\n    (`${this.host}/user/login`, user, { observe: 'response' });\n  }\n\n \n  public register(user: User): Observable<User|HttpErrorResponse> {\n    return this.http.post<User|HttpErrorResponse>(`${this.host}/user/register`, user);\n  }\n  \n     public logout():void {\n        this.token=null;\n        this.loggedInUsername !=null;\n        localStorage.removeItem('user');\n        localStorage.removeItem('token');\n        localStorage.removeItem('users');\n\n\n       }\n       public saveToken(token :any):void {\n        this.token=token;\n        localStorage.removeItem('user');\n        localStorage.setItem('token',token);       \n       }\n\n       public addUserToLocalCache(user:User):void {\n       \n        localStorage.setItem('user',JSON.stringify(user));\n       \n       }\n      \n      \n      \n       public getUserFromLocalCache(): User {\n        return JSON.parse(localStorage.getItem('user')|| \"false\");\n      }\n    \n      public loadToken(): void {\n        this.token = localStorage.getItem('token');\n      }\n       \n      \n\n      \n      public getToken(): string {\n        return this.token;\n      } \n     \n       \n      public isUserLoggedIn(): boolean {\n             this.loadToken();\n             if(this.token !=null && this.token !==''){\n                     if(this.jwtHelper.decodeToken(this.token).sub !=null || ''){\n\n                         if(!this.jwtHelper.isTokenExpired(this.token)){\n                           this.loggedInUsername=this.jwtHelper.decodeToken(this.token).sub;\n                           return true;\n\n\n                         }\n\n\n                     }\n\n\n             }\n\n             else{\n\n\n\n              this.logout();\n             }\n    \n\n\n\n             return false;\n\n\n       \n      }\n  \n\n\n\n  \n}\n"]}