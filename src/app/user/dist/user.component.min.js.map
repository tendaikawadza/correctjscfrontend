{"version":3,"sources":["user.component.ts"],"names":["core_1","require","rxjs_1","notificaton_type_enum_1","UserComponent","userService","notificationService","this","titleSubject","BehaviorSubject","titleAction$","asObservable","subscriptions","prototype","changeTitle","title","next","getUsers","showNotification","_this","refreshing","push","subscribe","response","addUsersToLocalCache","users","sendNotification","NotificationType","SUCCESS","errorResponse","ERROR","message","onSelectUser","selectedUser","_a","document","getElementById","click","onProfileImageChange","event","notificationType","notify","ngOnInit","__decorate","Component","selector","templateUrl","styleUrls","exports"],"mappings":"6YAAA,IAAAA,OAAAC,QAAA,iBAEAC,OAAAD,QAAA,QAMAE,wBAAAF,QAAA,iCAQAG,cAAA,WAcE,SAAAA,EAAoBC,EAAiCC,GAAjCC,KAAAF,YAAAA,EAAiCE,KAAAD,oBAAAA,EAX7CC,KAAAC,aAAc,IAAIN,OAAAO,gBAAwB,SAC3CF,KAAAG,aAAaH,KAAKC,aAAaG,eAG9BJ,KAAAK,cAAgC,GA+E1C,OAnESR,EAAAS,UAAAC,YAAP,SAAmBC,GAEjBR,KAAKC,aAAaQ,KAAKD,IAMlBX,EAAAS,UAAAI,SAAP,SAAgBC,GAAhB,IAAAC,EAAAZ,KACDA,KAAKa,YAAW,EAChBb,KAAKK,cAAcS,KAGlBd,KAAKF,YAAYY,WAAWK,UAK1B,SAACC,GAGCJ,EAAKd,YAAYmB,qBAAqBD,GACtCJ,EAAKM,MAAMF,EACXJ,EAAKC,YAAW,EACbF,GAEEC,EAAKO,iBAAiBvB,wBAAAwB,iBAAiBC,QAAQ,mDAItD,SAACC,GAECV,EAAKO,iBAAiBvB,wBAAAwB,iBAAiBG,MAAMD,EAAcE,aAStD3B,EAAAS,UAAAmB,aAAP,SAAoBC,SAGlB1B,KAAK0B,aAAaA,EACsB,QAAxCC,EAAAC,SAASC,eAAe,wBAAgB,IAAAF,GAAAA,EAAEG,OAGpCjC,EAAAS,UAAAyB,qBAAR,SAA6BC,KAOrBnC,EAAAS,UAAAa,iBAAR,SAAyBc,EAAoCT,GACvDA,EACFxB,KAAKD,oBAAoBmC,OAAOD,EAAkBT,GAElDxB,KAAKD,oBAAoBmC,OAAOD,EAAkB,yCAKxDpC,EAAAS,UAAA6B,SAAA,aAnFWtC,EAAauC,WAAA,CANzB3C,OAAA4C,UAAU,CACTC,SAAU,WACVC,YACA,wBACAC,UAAW,CAAC,2BAED3C,GAAb,GAAa4C,QAAA5C,cAAAA","file":"user.component.min.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { User } from '../model/user';\nimport { NotificationService } from '../service/notification.service';\nimport { UserService } from '../service/user.service';\n                                \nimport { HttpErrorResponse } from '@angular/common/http';\nimport { NotificationType } from '../enum/notificaton-type.enum';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: \n  './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n\n  private titleSubject =new BehaviorSubject<string>('Users');\n  public titleAction$=this.titleSubject.asObservable();\n  public users: User[]|any;\n  public refreshing: boolean|any;\n  private subscriptions: Subscription[] = [];\n  public selectedUser:User;\n\n  \n\n\n\n  constructor(private userService:UserService, private notificationService:NotificationService) { }\n\n\n\n\n  public changeTitle(title:string): void{\n\n    this.titleSubject.next(title)\n  }\n\n\n\n\n  public getUsers(showNotification :boolean): void{\n this.refreshing=true;\n this.subscriptions.push(\n\n\n  this.userService.getUsers().subscribe(\n    \n    \n    \n        \n    (response:User[]|any)=>{\n      \n\n      this.userService.addUsersToLocalCache(response);\n      this.users=response;\n      this.refreshing=false;\n      if(showNotification){\n\n           this.sendNotification(NotificationType.SUCCESS,'${response.legnth}user (s) loaded successfully');\n\n      }\n    } ,\n    (errorResponse:HttpErrorResponse)=>{\n\n      this.sendNotification(NotificationType.ERROR,errorResponse.message);\n    }\n  \n  \n   )\n \n  \n  );  }\n      \n    public onSelectUser(selectedUser:User):void{\n\n\n      this.selectedUser=selectedUser;\n      document.getElementById('openUserInfor')?.click\n    }\n\n    private onProfileImageChange(event: any):void {\n\n\n    }\n\n\n\n    private sendNotification(notificationType: NotificationType, message: string): void {\n      if (message) {\n        this.notificationService.notify(notificationType, message);\n      } else {\n        this.notificationService.notify(notificationType, 'An error occurred. Please try again.');\n      }\n    }\n\n\n  ngOnInit(): void {\n  }\n\n}\n"]}