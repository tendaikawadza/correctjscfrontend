{"version":3,"sources":["user.component.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAAkD;AAElD,6BAAqD;AAMrD,uEAAiE;AAQjE;IAcE,uBAAoB,WAAuB,EAAU,mBAAuC;QAAxE,gBAAW,GAAX,WAAW,CAAY;QAAU,wBAAmB,GAAnB,mBAAmB,CAAoB;QAXpF,iBAAY,GAAE,IAAI,sBAAe,CAAS,OAAO,CAAC,CAAC;QACpD,iBAAY,GAAC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;QAG7C,kBAAa,GAAmB,EAAE,CAAC;IAOqD,CAAC;IAK1F,mCAAW,GAAlB,UAAmB,KAAY;QAE7B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IAC/B,CAAC;IAKM,gCAAQ,GAAf,UAAgB,gBAAyB;QAAzC,iBA+BK;QA9BN,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC;QACrB,IAAI,CAAC,aAAa,CAAC,IAAI,CAGtB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,SAAS,CAKnC,UAAC,QAAmB;YAGlB,KAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;YAChD,KAAI,CAAC,KAAK,GAAC,QAAQ,CAAC;YACpB,KAAI,CAAC,UAAU,GAAC,KAAK,CAAC;YACtB,IAAG,gBAAgB,EAAC;gBAEf,KAAI,CAAC,gBAAgB,CAAC,wCAAgB,CAAC,OAAO,EAAC,gDAAgD,CAAC,CAAC;aAErG;QACH,CAAC,EACD,UAAC,aAA+B;YAE9B,KAAI,CAAC,gBAAgB,CAAC,wCAAgB,CAAC,KAAK,EAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACtE,CAAC,CAGD,CAGD,CAAC;IAAE,CAAC;IAEI,oCAAY,GAAnB,UAAoB,YAAiB;;QAGnC,IAAI,CAAC,YAAY,GAAC,YAAY,CAAC;QAC/B,MAAA,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,0CAAE,KAAK,CAAA;IACjD,CAAC;IAEO,4CAAoB,GAA5B,UAA6B,KAAU;IAGvC,CAAC;IAIO,wCAAgB,GAAxB,UAAyB,gBAAkC,EAAE,OAAe;QAC1E,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;SAC5D;aAAM;YACL,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,gBAAgB,EAAE,sCAAsC,CAAC,CAAC;SAC3F;IACH,CAAC;IAGH,gCAAQ,GAAR;IACA,CAAC;IApFU,aAAa;QANzB,gBAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,WAAW,EACX,uBAAuB;YACvB,SAAS,EAAE,CAAC,sBAAsB,CAAC;SACpC,CAAC;OACW,aAAa,CAsFzB;IAAD,oBAAC;CAtFD,AAsFC,IAAA;AAtFY,sCAAa","file":"user.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { User } from '../model/user';\nimport { NotificationService } from '../service/notification.service';\nimport { UserService } from '../service/user.service';\n                                \nimport { HttpErrorResponse } from '@angular/common/http';\nimport { NotificationType } from '../enum/notificaton-type.enum';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: \n  './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n\n  private titleSubject =new BehaviorSubject<string>('Users');\n  public titleAction$=this.titleSubject.asObservable();\n  public users: User[]|any;\n  public refreshing: boolean|any;\n  private subscriptions: Subscription[] = [];\n  public selectedUser:User;\n\n  \n\n\n\n  constructor(private userService:UserService, private notificationService:NotificationService) { }\n\n\n\n\n  public changeTitle(title:string): void{\n\n    this.titleSubject.next(title)\n  }\n\n\n\n\n  public getUsers(showNotification :boolean): void{\n this.refreshing=true;\n this.subscriptions.push(\n\n\n  this.userService.getUsers().subscribe(\n    \n    \n    \n        \n    (response:User[]|any)=>{\n      \n\n      this.userService.addUsersToLocalCache(response);\n      this.users=response;\n      this.refreshing=false;\n      if(showNotification){\n\n           this.sendNotification(NotificationType.SUCCESS,'${response.legnth}user (s) loaded successfully');\n\n      }\n    } ,\n    (errorResponse:HttpErrorResponse)=>{\n\n      this.sendNotification(NotificationType.ERROR,errorResponse.message);\n    }\n  \n  \n   )\n \n  \n  );  }\n      \n    public onSelectUser(selectedUser:User):void{\n\n\n      this.selectedUser=selectedUser;\n      document.getElementById('openUserInfor')?.click\n    }\n\n    private onProfileImageChange(event: any):void {\n\n\n    }\n\n\n\n    private sendNotification(notificationType: NotificationType, message: string): void {\n      if (message) {\n        this.notificationService.notify(notificationType, message);\n      } else {\n        this.notificationService.notify(notificationType, 'An error occurred. Please try again.');\n      }\n    }\n\n\n  ngOnInit(): void {\n  }\n\n}\n"]}